<?xml version="1.0" encoding="utf-8"?>
<!--
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  - JASMINe
  - Copyright (C) 2008 Bull S.A.S.
  - Contact: jasmine@ow2.org
  -
  - This library is free software; you can redistribute it and/or
  - modify it under the terms of the GNU Lesser General Public
  - License as published by the Free Software Foundation; either
  - version 2.1 of the License, or any later version.
  -
  - This library is distributed in the hope that it will be useful,
  - but WITHOUT ANY WARRANTY; without even the implied warranty of
  - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  - Lesser General Public License for more details.
  -
  - You should have received a copy of the GNU Lesser General Public
  - License along with this library; if not, write to the Free Software
  - Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
  - USA
  -
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  - $Id$
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-->
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
         xmlns:local="org.ow2.jasmine.kerneos.core.view.*"
         implements="mx.controls.listClasses.IListItemRenderer"
         horizontalAlign="center"
         verticalAlign="middle"
         width="140"
         height="100"
         verticalGap="0"
         toolTip="{_module.description}"
         buttonMode="true"
         useHandCursor="true"
         mouseChildren="false"
         verticalScrollPolicy="off"
         horizontalScrollPolicy="off"
         click="startModule(event)"
         creationComplete="initRenderer()">
         
    <mx:Script>
    <![CDATA[
    
    import mx.events.FlexEvent;
    import mx.controls.Alert;

    import org.ow2.jasmine.kerneos.core.vo.ModuleVO;

          
    // =========================================================================
    // Variables
    // =========================================================================
    
    // The item renderer stored data
    
    /**
    * The data displayed by the renderer
    */
    [Bindable]
    private var _module:ModuleVO;
    
    // Assets
    
    /**
    * The default module thumbnail
    */
    [Embed(source="/../assets/module.png")]
    [Bindable]
    private var defaultModuleThumbnail:Class;
    
    
    // =========================================================================
    // Initialization
    // =========================================================================
    
    /**
    * Init the component
    */
    public function initRenderer(event:Event=null):void
    {
        // Listen to mouse events
        addEventListener(MouseEvent.MOUSE_OVER,mouseOverHandler);
        addEventListener(MouseEvent.MOUSE_OUT,mouseOutHandler);
    }
    
    
    // =========================================================================
    // Events handlers
    // =========================================================================
    
    /**
    * On mouse over
    */
    public function mouseOverHandler(event:Event=null):void
    {
        this.setStyle('borderStyle','solid');
    }
    
    /**
    * On mouse out
    */
    public function mouseOutHandler(event:Event=null):void
    {
        if (!_module.loaded) {
            this.setStyle('borderStyle','none');
        }
    }
    
    
    // =========================================================================
    // Data object handling
    // =========================================================================
    
    /**
    * Get the item renderer data object
    */
    [Bindable("dataChange")]
    override public function get data():Object
    {
        return _module;
    }
    
    /**
    * Set the item renderer data object
    */
    override public function set data(value:Object):void
    {
        _module = value as ModuleVO;
        if (_module.loaded) {
            this.setStyle('borderStyle','solid');
        } else {
            this.setStyle('borderStyle','none');
        }
        
        invalidateProperties();
        dispatchEvent(new Event("dataChange"));
    }
    

    // =========================================================================
    // Private methods
    // =========================================================================
    
    /**
    * Start the module
    */
    private function startModule(e:Event):void {
        if(!_module.loaded) {
            (parentDocument as MainPanel).startModule(_module);
        } else {
            (parentDocument as MainPanel).bringToFront(_module);
        }
    }
    
    ]]>
    </mx:Script>
    
    <!-- The shadow -->
    <mx:GlowFilter id="nameShadow" 
                   blurX="10"
                   blurY="4"
                   quality="15"
                   alpha="0.9"
                   strength="4"
                   color="#FFFFFF"/>
                                            
    <!-- The module thumbnail -->
    <local:SmoothImage id="moduleThumb"
                       source="{IconUtility.getClass(moduleThumb,_module.bigIcon,64,64)}"
                       width="64"
                       height="64"/>
                       
    <!-- The module name -->
    <mx:LinkButton id="moduleName"
                   color="#111111"
                   label="{_module.name}"
                   filters="{[nameShadow]}"/>
                   
</mx:VBox>
