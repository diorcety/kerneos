<?xml version="1.0" encoding="utf-8"?>
<!--
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  - JASMINe
  - Copyright (C) 2008 Bull S.A.S.
  - Contact: jasmine@ow2.org
  -
  - This library is free software; you can redistribute it and/or
  - modify it under the terms of the GNU Lesser General Public
  - License as published by the Free Software Foundation; either
  - version 2.1 of the License, or any later version.
  -
  - This library is distributed in the hope that it will be useful,
  - but WITHOUT ANY WARRANTY; without even the implied warranty of
  - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  - Lesser General Public License for more details.
  -
  - You should have received a copy of the GNU Lesser General Public
  - License along with this library; if not, write to the Free Software
  - Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
  - USA
  -
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  - $Id$
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-->
<!---
    A component that displays Kerneos' notifications log. Allows to clear the list
    and export it as text. Shows some informations about the Flash player too.
    
    @author Julien Nicoulaud
-->
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
         width="100%"
         height="100%"
         creationComplete="initComponent()">
    
    <!--========================================================================
    | SCRIPT
    =========================================================================-->
        
    <mx:Script>
    <![CDATA[

    import flash.system.Capabilities;
    
    import mx.controls.Alert;
    import mx.collections.ArrayCollection;
    
    import com.adobe.cairngorm.model.ModelLocator;
    
    import org.ow2.jasmine.kerneos.core.vo.KerneosNotification;
    import org.ow2.jasmine.kerneos.core.model.KerneosModelLocator;
    
    
    // =========================================================================
    // Variables
    // =========================================================================

    /**
    * Clear list icon
    */
    [Embed(source="/../assets/clear16.png")]
    [Bindable]
    private var clearIcon:Class;

    /**
    * Copy icon
    */
    [Embed(source="/../assets/copy16.png")]
    [Bindable]
    private var copyIcon:Class;
    
    
    // =========================================================================
    // Initialization
    // =========================================================================
    
    /**
    * Init the component
    */
    private function initComponent(event:Event=null):void
    {
        // Filter debug messages by default
        KerneosModelLocator.getInstance().notifications.filterFunction = filterDebugMessages;
        KerneosModelLocator.getInstance().notifications.refresh();
    }
    
    
    // =========================================================================
    // Public Methods
    // =========================================================================
    
    /**
    * Export the list as a text and copy it to the system clipboard
    */
    public function copyToClipboard():void
    {
        // Generate the text and copy it in the clipboard
        System.setClipboard(exportListToText());
        
        // Display a message
        Alert.show('The events log has been formatted as text and is ready to ' + 
                   'be pasted in any text file.',
                   'Copied to clipboard',
                   4,
                   null,
                   null,
                   copyIcon,
                   4);
    }
    
    /**
    * Clear the notifications list
    */
    public function clearList(e:Event=null):void
    {
        KerneosModelLocator.getInstance().notifications.removeAll()
    }
    
    
    // =========================================================================
    // Private Methods
    // =========================================================================
    
    /**
    * When the "show debug" checkbox changes
    */
    private function handleShowDebugCheckboxChange(event:Event):void
    {
        if (showDebugCheckBox.selected) {
            KerneosModelLocator.getInstance().notifications.filterFunction = null;
            KerneosModelLocator.getInstance().notifications.refresh();
        } else {
            KerneosModelLocator.getInstance().notifications.filterFunction = filterDebugMessages;
            KerneosModelLocator.getInstance().notifications.refresh();
        }
    }
    
    /**
    * Format the log as text
    */
    private function exportListToText():String
    {
        var res : String = '================================================================================\n' +
                           KerneosModelLocator.getInstance().config.applicationProject + ' ' +
                           KerneosModelLocator.getInstance().config.applicationName +
                           ', generated on ' + new Date().toUTCString() + '\n' +
                           'Running on Flash player ' + Capabilities.version + ((Capabilities.isDebugger)?' debug':' ') +
                           ' (memory used: ' + System.totalMemory/1024 + ' Ko)\n' +
                           '================================================================================\n';
        for each (var notif : KerneosNotification in KerneosModelLocator.getInstance().notifications) {
            res += notif.toString() + "\n";
        }
        return res;
    }
    
    /**
    * Filters the "debug" level messages on the list
    */
    private function filterDebugMessages(item:Object):Boolean
    {
        if ((item as KerneosNotification).level == KerneosNotification.DEBUG) {
            return false;
        }
        return true;
    }
    
    ]]>
    </mx:Script>
    
    
    <!--========================================================================
    | GUI components
    =========================================================================-->
    
    <!-- The notifications list -->
    <mx:DataGrid
        id="notificationsList"
        width="100%"
        height="100%"
        dataProvider="{KerneosModelLocator.getInstance().notifications}"
        useRollOver="false"
        selectable="false"
        editable="false"
        horizontalScrollPolicy="on"
        verticalScrollPolicy="on"
        variableRowHeight="true">
        
        <mx:columns>
            <mx:DataGridColumn headerText="Module"
                               dataField="module"
                               width="150"
                               itemRenderer="org.ow2.jasmine.kerneos.core.view.notification.NotificationsLogModuleRenderer"/>
            <mx:DataGridColumn headerText="Date"
                               dataField="date"
                               width="120"
                               itemRenderer="org.ow2.jasmine.kerneos.core.view.notification.NotificationsLogDateRenderer"/>
            <mx:DataGridColumn headerText="Level"
                               dataField="level"
                               itemRenderer="org.ow2.jasmine.kerneos.core.view.notification.NotificationsLogLevelRenderer"
                               width="120"/>
            <mx:DataGridColumn headerText="Message"
                               dataField="message"
                               wordWrap="true"/>
        </mx:columns>
        
    </mx:DataGrid>
    
    <!-- The controls bar -->
    <mx:HBox width="100%"
             height="30"
             borderStyle="applicationControlBar"
             paddingBottom="3"
             paddingTop="3"
             paddingLeft="4"
             paddingRight="4"
             verticalAlign="middle">
        <mx:Button label="clear"
                   click="{clearList()}"
                   icon="{clearIcon}"/>
        <mx:Button label="Copy to clipboard"
                   click="{copyToClipboard()}"
                   icon="{copyIcon}"/>
        <mx:CheckBox id="showDebugCheckBox"
                     change="handleShowDebugCheckboxChange(event)"
                     selected="false"/>
        <mx:Text text="Show debug messages"
                 selectable="false"
                 fontWeight="bold"/>
        <mx:Spacer width="100%"/>
        <mx:Text id="playerInfo"
                 render="{playerInfo.text = 'Flash player ' + Capabilities.version + ((Capabilities.isDebugger)?' debug':' ') + ' (memory used: ' + System.totalMemory/1024 + ' Ko)';}"/>
    </mx:HBox>
    
</mx:VBox>
