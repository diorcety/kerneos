<?xml version="1.0" encoding="utf-8"?>
<!--
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  - JASMINe
  - Copyright (C) 2008-2009 Bull S.A.S.
  - Contact: jasmine AT ow2.org
  -
  - This library is free software; you can redistribute it and/or
  - modify it under the terms of the GNU Lesser General Public
  - License as published by the Free Software Foundation; either
  - version 2.1 of the License, or any later version.
  -
  - This library is distributed in the hope that it will be useful,
  - but WITHOUT ANY WARRANTY; without even the implied warranty of
  - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  - Lesser General Public License for more details.
  -
  - You should have received a copy of the GNU Lesser General Public
  - License along with this library; if not, write to the Free Software
  - Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
  - USA
  -
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  - $Id$
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-->
<mx:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:mx="library://ns.adobe.com/flex/mx"
                xmlns:view="org.ow2.jasmine.kerneos.core.view.*"
                xmlns:control="org.ow2.jasmine.kerneos.core.control.*"
                xmlns:business="org.ow2.jasmine.kerneos.core.business.*"
                paddingLeft="0" paddingRight="0" paddingBottom="0" paddingTop="0"
                pageTitle="Kerneos"
                preloader="org.ow2.jasmine.kerneos.core.view.preloader.KerneosPreloader"
                scriptTimeLimit="60"
                applicationComplete="applicationCompleteHandler()"
                frameRate="60">

    <fx:Script>
        <![CDATA[
        import mx.controls.Alert;
        import mx.messaging.ChannelSet;

        import mx.messaging.events.ChannelFaultEvent;


        import mx.messaging.events.MessageEvent;

        import mx.utils.URLUtil;

        import org.granite.gravity.Consumer;
        import org.granite.gravity.channels.GravityChannel;
        import org.ow2.jasmine.kerneos.common.util.StringUtils;
        import org.ow2.jasmine.kerneos.core.managers.KerneosLifeCycleManager;
        import org.ow2.jasmine.kerneos.core.managers.ModulesLifeCycleManager;
        import org.ow2.jasmine.kerneos.core.model.KerneosModelLocator;
        import org.ow2.jasmine.kerneos.core.vo.ModuleEventVO;
        import org.ow2.jasmine.kerneos.core.vo.ModuleVO;

        private var consumer:Consumer = null;

            /**
            * On application creation complete.
            */
            private function applicationCompleteHandler():void
            {
                // Initialize the main view
                mainView.initializeView();

                // Register methods that can be called externally from the Javascript.
                ExternalInterface.addCallback("canBeClosed",
                                              KerneosLifeCycleManager.canBeClosed);

                // Init client-server communications channels properties
                var urlServer : String = URLUtil.getServerNameWithPort(Application.application.loaderInfo.url);
                var context : String = StringUtils.parseURLContext(Application.application.loaderInfo.url);

                var channelSet:ChannelSet = new ChannelSet();
                var channel:GravityChannel = new GravityChannel("my-gravityamf-kerneos", "http://" + urlServer + "/" + context + "/gravity/amf");
                channelSet.addChannel(channel);

                consumer = new Consumer();
                consumer.channelSet = channelSet;
                consumer.destination = "kerneos-gravity";
                consumer.topic = "kerneos/config";
                consumer.addEventListener(ChannelFaultEvent.FAULT, onFault);
                consumer.addEventListener(MessageEvent.MESSAGE, onConsumerMessage);
                consumer.subscribe();
            }

            private function onFault(event:Event):void {
                Alert.show(event.toString());
            }

            private function onConsumerMessage(event:MessageEvent):void {
                var moduleEvent:ModuleEventVO = event.message.body as ModuleEventVO;
                if (moduleEvent) {
                    var model:KerneosModelLocator = KerneosModelLocator.getInstance();
                    if (moduleEvent.eventType == ModuleEventVO.LOAD && moduleEvent.module) {
                        model.modules.modulesList.addItem(moduleEvent.module as ModuleVO);
                        //ModulesLifeCycleManager.startModule(moduleEvent.module);
                        ModulesLifeCycleManager.setupOneModuleServicesAndIcons(moduleEvent.module);
                    } else {
                        ModulesLifeCycleManager.unloadModule(moduleEvent.module);
                        ModulesLifeCycleManager.deleteSetupModuleServicesAndIcons(moduleEvent.module);

                        var moduleLoop:ModuleVO;
                        var moduleToDelete:ModuleVO;
                        //TODO compare by module ID
                        for each(moduleLoop in model.modules.modulesList) {
                            if (moduleLoop.name == moduleEvent.module.name) {
                                moduleToDelete = moduleLoop;
                            }
                        }

                        var moduleIndex:int = model.modules.modulesList.getItemIndex(moduleToDelete);
                        model.modules.modulesList.removeItemAt(moduleIndex);

                    }
                }
            }

        ]]>
    </fx:Script>
    
    <!-- The locales resource bundles -->
    <fx:Metadata>
        [ResourceBundle("kerneosLocales")]
        [ResourceBundle("controls")]
    </fx:Metadata>

    <fx:Declarations>
        <!-- The business layer -->
        <business:Services id="services"/>

        <!-- The controller -->
        <control:Controller id="controller"/>
    </fx:Declarations>

    <!-- The style sheet -->
    <fx:Style source="/../assets/styles.css" />

    <!-- The main view that contains the complete app -->
    <view:KerneosMainView id="mainView"/>

</mx:Application>
