<?xml version="1.0" encoding="utf-8"?>
<!--
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
     - Kerneos
     - Copyright (C) 2011 Bull S.A.S.
     - Contact: jasmine AT ow2.org
     -
     - This library is free software; you can redistribute it and/or
     - modify it under the terms of the GNU Lesser General Public
     - License as published by the Free Software Foundation; either
     - version 2.1 of the License, or any later version.
     -
     - This library is distributed in the hope that it will be useful,
     - but WITHOUT ANY WARRANTY; without even the implied warranty of
     - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     - Lesser General Public License for more details.
     -
     - You should have received a copy of the GNU Lesser General Public
     - License along with this library; if not, write to the Free Software
     - Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
     - USA
     -
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-->
<s:GridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
                    xmlns:s="library://ns.adobe.com/flex/spark">

    <fx:Script>
		<![CDATA[
        import com.adobe.cairngorm.control.CairngormEventDispatcher;
        import org.ow2.kerneos.modules.store.event.GetOrDeleteStoreEvent;
        import org.ow2.kerneos.modules.store.view.StoreTitleWindow;
        import mx.managers.PopUpManager;

        import org.ow2.kerneos.modules.store.vo.StoreVO;

        private function editStore():void {
            var store:StoreTitleWindow = StoreTitleWindow(PopUpManager.createPopUp(this, StoreTitleWindow , true));

            store.temporalStore = data as StoreVO;

            // Add a close handler for the closeButton
            store.addEventListener("close", closeHandler);
        }

        private function closeHandler(event:Event):void {
            event.target.removeEventListener("close", closeHandler);
            PopUpManager.removePopUp(event.target as mx.core.IFlexDisplayObject);
        }

        private function deleteStore():void {
            var evt:GetOrDeleteStoreEvent = new GetOrDeleteStoreEvent(
                    GetOrDeleteStoreEvent.DELETE_STORE);
            evt.id = data.id;
            CairngormEventDispatcher.getInstance().dispatchEvent(evt);

            var get_stores_event:GetOrDeleteStoreEvent = new GetOrDeleteStoreEvent(
                    GetOrDeleteStoreEvent.GET_STORES);
            CairngormEventDispatcher.getInstance().dispatchEvent(get_stores_event);
        }
        ]]>
	</fx:Script>

    <s:Group>
        <s:layout>
            <s:HorizontalLayout paddingLeft="10"/>
        </s:layout>
        <s:Button label="Edit" click="editStore()"/>
        <s:Button label="Delete" click="deleteStore()"/>
    </s:Group>
</s:GridItemRenderer>
