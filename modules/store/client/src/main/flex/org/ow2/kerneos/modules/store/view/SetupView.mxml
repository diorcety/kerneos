<?xml version = "1.0" encoding = "utf-8"?>
<!--
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
     - Kerneos
     - Copyright (C) 2011 Bull S.A.S.
     - Contact: jasmine AT ow2.org
     -
     - This library is free software; you can redistribute it and/or
     - modify it under the terms of the GNU Lesser General Public
     - License as published by the Free Software Foundation; either
     - version 2.1 of the License, or any later version.
     -
     - This library is distributed in the hope that it will be useful,
     - but WITHOUT ANY WARRANTY; without even the implied warranty of
     - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     - Lesser General Public License for more details.
     -
     - You should have received a copy of the GNU Lesser General Public
     - License along with this library; if not, write to the Free Software
     - Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
     - USA
     -
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-->

<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:renderer="org.ow2.kerneos.modules.store.view.render.*"
         width="100%"
         height="100%">

    <fx:Script>
    <![CDATA[
        import org.ow2.kerneos.modules.store.model.ModuleModelLocator;
        import mx.managers.PopUpManager;

        private function addStoreClickHandler():void {
            var store:StoreTitleWindow = StoreTitleWindow(PopUpManager.createPopUp(this, StoreTitleWindow , true));

            // Add a close handler for the closeButton
            store.addEventListener("close", closeHandler);
        }

        private function closeHandler(event:Event):void {
            event.target.removeEventListener("close", closeHandler);
            PopUpManager.removePopUp(event.target as mx.core.IFlexDisplayObject);
        }
        ]]>
    </fx:Script>

    <s:layout>
        <s:VerticalLayout verticalAlign="middle" horizontalAlign="center"/>
    </s:layout>

    <s:DataGrid width="100%" height="100%"
                dataProvider="{ModuleModelLocator.getInstance().listStores}">
        <s:columns>
            <s:ArrayList>
                <s:GridColumn width="160" dataField="name" headerText="Name"/>
                <s:GridColumn width="160" dataField="url" headerText="Url"/>
                <s:GridColumn width="130" dataField="description" headerText="Description"/>
                <s:GridColumn width="250" headerText="Actions">
                    <s:itemRenderer>
                        <fx:Component>
                            <renderer:StoreSetupActionsRenderer/>
                        </fx:Component>
                    </s:itemRenderer>
                </s:GridColumn>
            </s:ArrayList>
        </s:columns>
    </s:DataGrid>

    <s:HGroup width="100%">
        <s:Button label="Add New Store" click="addStoreClickHandler()"/>
    </s:HGroup>
</s:Group>
