<?xml version = "1.0" encoding = "utf-8"?>
<!--
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
     - Kerneos
     - Copyright (C) 2009 Bull S.A.S.
     - Contact: jasmine AT ow2.org
     -
     - This library is free software; you can redistribute it and/or
     - modify it under the terms of the GNU Lesser General Public
     - License as published by the Free Software Foundation; either
     - version 2.1 of the License, or any later version.
     -
     - This library is distributed in the hope that it will be useful,
     - but WITHOUT ANY WARRANTY; without even the implied warranty of
     - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     - Lesser General Public License for more details.
     -
     - You should have received a copy of the GNU Lesser General Public
     - License along with this library; if not, write to the Free Software
     - Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
     - USA
     -
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
     - $Id$
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-->
<mx:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:mx="library://ns.adobe.com/flex/mx"
                width="700"
                height="450"
                showCloseButton="true"
                verticalScrollPolicy="off"
                horizontalScrollPolicy="off"
                close="close();"
                creationComplete="initializeComponent()"
                initialize="init()">

    <fx:Metadata>
        <![CDATA[
        /**
         * A help window with pages and a flat menu.
         *
         * @example How to use it ? This component must be extended the following way:
         * <listing version = "3.0">
         *    &lt;HelpWindow xmlns = "org.ow2.jasmine.monitoring.eos.common.controls.*"
         *                xmlns:mx = "library://ns.adobe.com/flex/mx"
         *                title = "The window title"&gt;
         *
         *        &lt;pages&gt;
         *            &lt;mx:HBox label = "The default page"&gt;
         *                &lt;mx:Text text = "Some content" /&gt;
         *            &lt;/mx:HBox&gt;
         *            &lt;mx:HBox label = "Another page"&gt;
         *                &lt;mx:Text text = "Some content too" /&gt;
         *            &lt;/mx:HBox&gt;
         *        &lt;/pages&gt;
         *
         *    &lt;/HelpWindow&gt;
         * </listing>
         *
         * @example It can then by instantiated like every TitleWindow:
         * <listing version = "3.0">
         *     var helpWindow : MyHelpWindow = new MyHelpWindow();
         *     PopUpManager.addPopUp(helpWindow,
         *     FlexGlobals.topLevelApplication as DisplayObject,
         *     false);
         *     PopUpManager.centerPopUp(helpWindow);
         * </listing>
         *
         * @author Julien Nicoulaud
         */
        [Style (name ="icon", type="Class", inherit="no")]
        ]]>
    </fx:Metadata>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- SCRIPT                                                                                  -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <fx:Script>
        <![CDATA[
        import mx.managers.PopUpManager;
        import mx.controls.Text;

        import flash.events.Event;

        import org.ow2.kerneos.common.util.IconUtility;

        // =====================================================================================
        // Variables
        // =====================================================================================

        /**
         * The array where external children are stored before creation is complete
         */
        private var _pagesChildrenHolder:Array;


        // =====================================================================================
        // Constructors & initialization
        // =====================================================================================

        <!-- Get icon style property at init-->
        private function init():void {
            this.titleIcon = getStyle("icon");
        }

        <!-- Add icon style property -->
        override public function styleChanged(styleProp:String):void {
            super.styleChanged(styleProp);
            if (styleProp == "icon") {
                this.titleIcon = getStyle("icon");
            }
        }

        /**
         * Initialize the component
         */
        private function initializeComponent(event:Event = null):void {
            // Add pages components
            addExternalChildren();

            // Set the first page as the selected one
            menuButtonBar.selectedIndex = 0;
        }


        /**
         * Add content children to their container
         */
        private function addExternalChildren(event:Event = null):void {
            if (this._pagesChildrenHolder) {
                this.pagesContainer.removeAllChildren();

                for (var i:int = 0; i < this._pagesChildrenHolder.length; i++) {
                    pagesContainer.addChild(this._pagesChildrenHolder[i]);
                }
            }
        }


        // =====================================================================================
        // Public methods
        // =====================================================================================

        /**
         * Close the window
         */
        public function close(e:Event = null):void {
            PopUpManager.removePopUp(this);
        }


        /**
         * Set the pages
         */
        public function set pages(value:Array):void {
            _pagesChildrenHolder = value;
        }
        ]]>
    </fx:Script>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- GUI Components                                                                          -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <mx:HBox width="100%"
             height="100%"
             horizontalGap="0">

        <!-- The menu -->
        <mx:VBox id="menuContainer"
                 height="100%">
            <mx:LinkBar id="menuButtonBar"
                        dataProvider="{pagesContainer}"
                        direction="vertical"/>
        </mx:VBox>

        <!-- The content -->
        <mx:ViewStack id="pagesContainer"
                      width="100%"
                      height="100%"/>
    </mx:HBox>

</mx:TitleWindow>
