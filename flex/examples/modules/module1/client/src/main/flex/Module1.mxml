<?xml version = "1.0" encoding = "utf-8"?>
<!--
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
     - Kerneos
     - Copyright (C) 2009-2011 Bull S.A.S.
     - Contact: jasmine AT ow2.org
     -
     - This library is free software; you can redistribute it and/or
     - modify it under the terms of the GNU Lesser General Public
     - License as published by the Free Software Foundation; either
     - version 2.1 of the License, or any later version.
     -
     - This library is distributed in the hope that it will be useful,
     - but WITHOUT ANY WARRANTY; without even the implied warranty of
     - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     - Lesser General Public License for more details.
     -
     - You should have received a copy of the GNU Lesser General Public
     - License along with this library; if not, write to the Free Software
     - Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
     - USA
     -
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-->
<kerneos:KerneosModule
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:view="org.ow2.kerneos.examples.modules.module1.view.*"
        xmlns:kerneos="org.ow2.kerneos.core.api.*"
        width="100%"
        open="openModule()"
        close="closeModule()"
        height="100%">

    <fx:Metadata>
        [ResourceBundle("module1Resources")]
    </fx:Metadata>

    <fx:Style>
        global {
            font-size: 16px;
        }
    </fx:Style>
    <fx:Script>
        <![CDATA[
        import com.adobe.cairngorm.control.CairngormEventDispatcher;

        import org.ow2.kerneos.examples.modules.module1.control.Controller;
        import org.ow2.kerneos.examples.modules.module1.model.ModuleModelLocator;

        // =========================================================================
        // Implementation of KerneosModule
        // =========================================================================
        private static var instance:Module1;
        private var controller:Controller;
        private var model:ModuleModelLocator;
        private var dispatcher:CairngormEventDispatcher;

        public static function getInstance():Module1 {
            return instance;
        }

        public function getDispatcher():CairngormEventDispatcher {
            return dispatcher;
        }

        public function getModel():ModuleModelLocator {
            return model;
        }

        /**
         * When the module is loading
         */
        public function openModule():void {
            instance = this;
            dispatcher = new CairngormEventDispatcher();
            model = new ModuleModelLocator();
            controller = new Controller(dispatcher);
            controller.initialiseCommands();
        }

        /**
         * When the module is closing, cut off all client-server communications
         */
        public function closeModule():void {
            mainView.destroy();
            controller.removeCommands()
        }
        ]]>
    </fx:Script>

    <!-- Instantiate the main view -->
    <view:MainView id="mainView"/>

</kerneos:KerneosModule>
