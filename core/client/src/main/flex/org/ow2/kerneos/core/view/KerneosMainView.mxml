<?xml version = "1.0" encoding = "utf-8"?>
<!--
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
     - JASMINe
     - Copyright (C) 2008 Bull S.A.S.
     - Contact: jasmine AT ow2.org
     -
     - This library is free software; you can redistribute it and/or
     - modify it under the terms of the GNU Lesser General Public
     - License as published by the Free Software Foundation; either
     - version 2.1 of the License, or any later version.
     -
     - This library is distributed in the hope that it will be useful,
     - but WITHOUT ANY WARRANTY; without even the implied warranty of
     - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     - Lesser General Public License for more details.
     -
     - You should have received a copy of the GNU Lesser General Public
     - License along with this library; if not, write to the Free Software
     - Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
     - USA
     -
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
     - $Id$
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-->
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009"
           xmlns:mx="library://ns.adobe.com/flex/mx"
           xmlns:view="org.ow2.kerneos.core.view.*"
           width="100%"
           height="100%"
           currentState="{KerneosModelLocator.getInstance().state}">

    <fx:Metadata>
        <![CDATA[
        /**
         * The main view of Kerneos.
         *
         * Switches between children views depending on the state of the application.
         *
         * @author Julien Nicoulaud
         * @author Guillaume Renault
         */
        ]]>
    </fx:Metadata>

    <fx:Script>
        <![CDATA[
        import mx.managers.DragManager;
        import mx.managers.HistoryManager;

        import com.adobe.cairngorm.control.CairngormEventDispatcher;

        import org.ow2.kerneos.common.event.ServerSideExceptionEvent;
        import org.ow2.kerneos.core.model.KerneosState;
        import org.ow2.kerneos.core.model.KerneosModelLocator;
        import org.ow2.kerneos.core.managers.KerneosLifeCycleManager;

        // =========================================================================
        // Variables
        // =========================================================================

        // Dummy: flex SDK bugs workarounds

        /**
         * The application drag&drop manager
         * Dummy: workaround for a bug with module loaders and drag&drop
         * @see http://bugs.adobe.com/jira/browse/SDK-12061
         */
        private var dragManager:DragManager;

        /**
         * The flash player history manager.
         * Dummy: workaround for a bug with modules loaders and modules using
         * ViewStacks (=> TabNavigators too)
         * @see http://bugs.adobe.com/jira/browse/SDK-15249
         */
        private var hist:HistoryManager;


        // =========================================================================
        // Initialization
        // =========================================================================

        /**
         * On component creation complete.
         */
        public function initializeView(e:Event = null):void {
            // Listen to server side exceptions events
            CairngormEventDispatcher.getInstance().addEventListener(ServerSideExceptionEvent.SERVER_SIDE_EXCEPTION + KerneosModelLocator.getInstance().componentID, ServerSideExceptionEvent.show, false, 0, true);

            // Listen to keyboards events at the "application" level
            parentApplication.addEventListener(KeyboardEvent.KEY_UP, keyHandler, false, 0, true);

            // Switch to the "loading" state
            KerneosModelLocator.getInstance().state = KerneosState.LOADING;
        }


        // =========================================================================
        // Keyboard shortcuts handling
        // =========================================================================

        /**
         * Handles keyboard events
         */
        private function keyHandler(event:KeyboardEvent):void {
            switch (event.keyCode) {
                case 116: // keycode for F5
                    KerneosLifeCycleManager.reloadPage();
                    break;
            }
        }
        ]]>
    </fx:Script>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- Views                                                                  -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <view:LoadingView includeIn="loading"
                      id="loadingView"
                      width="100%"
                      height="100%"/>

    <view:ApplicationTitle includeIn="applicationLoaded"
                           id="applicationTitle"
                           width="1000"
                           height="80"
                           top="10"
                           right="10"/>

    <view:DesktopView includeIn="desktop"
                      id="desktopView"
                      width="100%"
                      height="100%"/>

    <view:LoginView includeIn="login"
                      id="loginView"
                      horizontalCenter="0"
                      verticalCenter="0"
                      width="50%"
                      height="50%"/>
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- States                                                                  -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <mx:states>

        <!-- When loading -->
        <mx:State name="loading"/>

        <!-- When the config is loaded -->
        <mx:State name="applicationLoaded"/>

        <!-- Working view -->
        <mx:State name="desktop"
                  basedOn="applicationLoaded"/>

        <!-- Login view -->
        <mx:State name="login"
                  basedOn="applicationLoaded"/>

        <!-- When server connexion lost -->
        <mx:State name="disconnected"
                  basedOn="applicationLoaded"/>

    </mx:states>


    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- Transitions                                                             -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <mx:transitions>
        <mx:Transition fromState="loading"
                       toState="desktop">
            <mx:Parallel>
                <mx:Fade target="{applicationTitle}"
                         duration="3000"
                         alphaFrom="0.0"
                         alphaTo="1.0"/>
                <mx:Sequence>
                    <mx:Glow duration="1500"
                             alphaFrom="0.0"
                             alphaTo="0.0"
                             blurXFrom="0.0"
                             blurXTo="0.0"
                             blurYFrom="0.0"
                             blurYTo="0.0"
                             color="0x000000"
                             target="{applicationTitle}"/>
                    <mx:Glow duration="500"
                             alphaFrom="0.0"
                             alphaTo="0.5"
                             blurXFrom="0.0"
                             blurXTo="15.0"
                             blurYFrom="0.0"
                             blurYTo="15.0"
                             color="0x000000"
                             target="{applicationTitle}"/>
                    <mx:Glow duration="500"
                             alphaFrom="0.5"
                             alphaTo="0.0"
                             blurXFrom="15.0"
                             blurXTo="0.0"
                             blurYFrom="15.0"
                             blurYTo="0.0"
                             color="0x000000"
                             target="{applicationTitle}"/>
                </mx:Sequence>
                <mx:Fade id="taskBarFadeIn"
                         target="{desktopView.taskBar}"
                         duration="2000"
                         alphaFrom="0.0"
                         alphaTo="1.0"/>
                <mx:Fade id="modulesListFadeIn"
                         target="{desktopView.windowContainer}"
                         duration="700"
                         alphaFrom="0.0"
                         alphaTo="1.0"/>
                <mx:Blur id="modulesListBlurIn"
                         target="{desktopView.windowContainer}"
                         duration="900"
                         blurXFrom="100"
                         blurYFrom="5"
                         blurXTo="0"
                         blurYTo="0"/>
            </mx:Parallel>
        </mx:Transition>
    </mx:transitions>

</mx:Canvas>
